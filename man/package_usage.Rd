% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function_package_usage.R
\name{package_usage}
\alias{package_usage}
\title{Identify the packages and functions loaded, needed or not needed in a script}
\usage{
package_usage(scriptfile, extensive = FALSE)
}
\arguments{
\item{scriptfile}{is a character string giving the path to the script file.}

\item{extensive}{Logical, if \code{TRUE}, not only the packages loaded and used
but also the functions used from these packages are listed. Default is
\code{FALSE}.}
}
\value{
A list is returned invisibly. If \code{extensive=FALSE},
  the list contains the names of packages loaded, packages used, packages
  loaded but not used, packages accessed via \code{::} or \code{:::}. If
  \code{extensive=TRUE}, packages used is itself a nested list function names
  grouped by packages. Generic functions with separate methods in different
  packages (e.g. \code{plot()}) result in groups that are named after several
  packages (e.g. \code{"c(base, TAM)"}). Functions called via  \code{::} or
  \code{:::} and functions defined within the script are in a group
  "character(0)".
}
\description{
\code{package_usage} Reads a scriptfile and determines which packages are
  being loaded when executing the script and which functions are used. The
  function does \em{not} execute the script but it does load (and instantly
  unload) all packages loaded via \code{library()} or \code{require()} in the
  script. Functions and packages accessed via \code{::} or \code{:::} are also
  identified.
}
